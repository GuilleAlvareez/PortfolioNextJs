@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  scroll-behavior: smooth;
}

body {
  font-family: var(--font-inter), sans-serif;
}

@keyframes blob {
	0% { transform: translate(0px, 0px) scale(1); }
	33% { transform: translate(30px, -50px) scale(1.1); }
	66% { transform: translate(-20px, 20px) scale(0.9); }
	100% { transform: translate(0px, 0px) scale(1); }
}

.animate-blob {
  animation: blob 7s infinite;
}
.animation-delay-2000 {
  animation-delay: 2s;
}

@keyframes scroll-line {
  0% { transform: translateY(-30px); opacity: 0; }
  50% { opacity: 1; }
  100% { transform: translateY(30px); opacity: 0; }
}
.animate-scroll-line {
  animation: scroll-line 2s infinite ease-in-out;
}

.timeline-line {
  background-size: 100% 200%;
  animation: flow-gradient 5s linear infinite;
}

@keyframes flow-gradient {
  0% { background-position: 50% 0%; }
  100% { background-position: 50% 200%; }
}

.timeline-container:hover .timeline-item {
  opacity: 0.5;
  transition: opacity 0.3s ease;
}
.timeline-container:hover .timeline-item:hover {
  opacity: 1;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fade-in {
  /* 
    Define la animación pero la deja en su estado final (forwards).
    La 'key' en el componente de React se encargará de reiniciarla.
  */
  animation: fadeIn 0.5s ease-out forwards;
}