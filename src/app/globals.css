@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  scroll-behavior: smooth;
}

body {
  font-family: var(--font-inter), sans-serif;
}

@keyframes blob {
	0% { transform: translate(0px, 0px) scale(1); }
	33% { transform: translate(30px, -50px) scale(1.1); }
	66% { transform: translate(-20px, 20px) scale(0.9); }
	100% { transform: translate(0px, 0px) scale(1); }
}

.animate-blob {
  animation: blob 7s infinite;
}
.animation-delay-2000 {
  animation-delay: 2s;
}

@keyframes scroll-line {
  0% { transform: translateY(-30px); opacity: 0; }
  50% { opacity: 1; }
  100% { transform: translateY(30px); opacity: 0; }
}
.animate-scroll-line {
  animation: scroll-line 2s infinite ease-in-out;
}

.timeline-line {
  background-size: 100% 200%;
  animation: flow-gradient 5s linear infinite;
}

@keyframes flow-gradient {
  0% { background-position: 50% 0%; }
  100% { background-position: 50% 200%; }
}

.timeline-container:hover .timeline-item {
  opacity: 0.5;
  transition: opacity 0.3s ease;
}
.timeline-container:hover .timeline-item:hover {
  opacity: 1;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fade-in {
  /* 
    Define la animación pero la deja en su estado final (forwards).
    La 'key' en el componente de React se encargará de reiniciarla.
  */
  animation: fadeIn 0.5s ease-out forwards;
}

/* Nuevas animaciones suaves para las secciones */
@keyframes slideInFromBottom {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInFromLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInFromRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Clases de utilidad para las animaciones */
.animate-slide-in-bottom {
  animation: slideInFromBottom 0.8s ease-out forwards;
}

.animate-slide-in-left {
  animation: slideInFromLeft 0.8s ease-out forwards;
}

.animate-slide-in-right {
  animation: slideInFromRight 0.8s ease-out forwards;
}

.animate-scale-in {
  animation: scaleIn 0.6s ease-out forwards;
}

/* Transiciones suaves para elementos interactivos */
.smooth-transition {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.smooth-transition-slow {
  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Efecto de hover suave para cards */
.hover-lift {
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), 
              box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-lift:hover {
  transform: translateY(-4px);
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 
              0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

.floatWindow {
  position: fixed;
  bottom: 6rem;
  right: 4rem;
  z-index: 50;
  background-color: transparent;
  padding: 1rem;
  visibility: hidden;
  transform: scale(0.9) translateY(73px);
  opacity: 0;
  transition: all 0.3s ease-in-out;
  transform-origin: bottom right;
}

.floatWindow.visible {
  visibility: visible;
  opacity: 1;
  transform: scale(1) translateY(0);
}

/* Animación de cursor de escritura */
@keyframes blink {
  0%, 50% { opacity: 1; }
  51%, 100% { opacity: 0; }
}

.cursor-blink {
  animation: blink 0.8s infinite;
  background-color: #60a5fa !important;
  box-shadow: 0 0 8px rgba(96, 165, 250, 0.6);
}

/* Animación de escritura más suave */
@keyframes typewriter {
  from { width: 0; }
  to { width: 100%; }
}

.typewriter {
  overflow: hidden;
  white-space: nowrap;
  animation: typewriter 2s steps(40, end);
}